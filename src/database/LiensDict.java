package database;

// Generated 25 janv. 2013 00:04:50 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * LiensDict generated by hbm2java
 */
@Entity
@Table(name = "liens_dict", catalog = "bddictionnairique")
public class LiensDict implements java.io.Serializable {

	private Integer idLienDict;
	private String mot;
	private String var1;
	private String var2;
	private String var3;
	private String var4;
	private String var5;
	private Integer flagLien;
	private Integer flagCat;
	private Set decompositionGraphiques = new HashSet(0);
	private Set decompositionMorphologiques = new HashSet(0);
	private Set usageLiens = new HashSet(0);
	private Set frequences = new HashSet(0);
	private Set headwords = new HashSet(0);
	private Set lexiquesForIdLienDictMotReferent2 = new HashSet(0);
	private Set lexiquesForIdLienDictMotReferent1 = new HashSet(0);
	private Set lexiquesForIdLienDictMotEtudie = new HashSet(0);

	public LiensDict() {
	}

	public LiensDict(String mot, String var1, String var2, String var3,
			String var4, String var5, Integer flagLien, Integer flagCat,
			Set decompositionGraphiques, Set decompositionMorphologiques,
			Set usageLiens, Set frequences, Set headwords,
			Set lexiquesForIdLienDictMotReferent2,
			Set lexiquesForIdLienDictMotReferent1,
			Set lexiquesForIdLienDictMotEtudie) {
		this.mot = mot;
		this.var1 = var1;
		this.var2 = var2;
		this.var3 = var3;
		this.var4 = var4;
		this.var5 = var5;
		this.flagLien = flagLien;
		this.flagCat = flagCat;
		this.decompositionGraphiques = decompositionGraphiques;
		this.decompositionMorphologiques = decompositionMorphologiques;
		this.usageLiens = usageLiens;
		this.frequences = frequences;
		this.headwords = headwords;
		this.lexiquesForIdLienDictMotReferent2 = lexiquesForIdLienDictMotReferent2;
		this.lexiquesForIdLienDictMotReferent1 = lexiquesForIdLienDictMotReferent1;
		this.lexiquesForIdLienDictMotEtudie = lexiquesForIdLienDictMotEtudie;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_lien_dict", unique = true, nullable = false)
	public Integer getIdLienDict() {
		return this.idLienDict;
	}

	public void setIdLienDict(Integer idLienDict) {
		this.idLienDict = idLienDict;
	}

	@Column(name = "mot", length = 100)
	public String getMot() {
		return this.mot;
	}

	public void setMot(String mot) {
		this.mot = mot;
	}

	@Column(name = "var1", length = 100)
	public String getVar1() {
		return this.var1;
	}

	public void setVar1(String var1) {
		this.var1 = var1;
	}

	@Column(name = "var2", length = 100)
	public String getVar2() {
		return this.var2;
	}

	public void setVar2(String var2) {
		this.var2 = var2;
	}

	@Column(name = "var3", length = 100)
	public String getVar3() {
		return this.var3;
	}

	public void setVar3(String var3) {
		this.var3 = var3;
	}

	@Column(name = "var4", length = 100)
	public String getVar4() {
		return this.var4;
	}

	public void setVar4(String var4) {
		this.var4 = var4;
	}

	@Column(name = "var5", length = 100)
	public String getVar5() {
		return this.var5;
	}

	public void setVar5(String var5) {
		this.var5 = var5;
	}

	@Column(name = "flag_lien")
	public Integer getFlagLien() {
		return this.flagLien;
	}

	public void setFlagLien(Integer flagLien) {
		this.flagLien = flagLien;
	}

	@Column(name = "flag_cat")
	public Integer getFlagCat() {
		return this.flagCat;
	}

	public void setFlagCat(Integer flagCat) {
		this.flagCat = flagCat;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDict")
	public Set getDecompositionGraphiques() {
		return this.decompositionGraphiques;
	}

	public void setDecompositionGraphiques(Set decompositionGraphiques) {
		this.decompositionGraphiques = decompositionGraphiques;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDict")
	public Set getDecompositionMorphologiques() {
		return this.decompositionMorphologiques;
	}

	public void setDecompositionMorphologiques(Set decompositionMorphologiques) {
		this.decompositionMorphologiques = decompositionMorphologiques;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDict")
	public Set getUsageLiens() {
		return this.usageLiens;
	}

	public void setUsageLiens(Set usageLiens) {
		this.usageLiens = usageLiens;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDict")
	public Set getFrequences() {
		return this.frequences;
	}

	public void setFrequences(Set frequences) {
		this.frequences = frequences;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDict")
	public Set getHeadwords() {
		return this.headwords;
	}

	public void setHeadwords(Set headwords) {
		this.headwords = headwords;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDictByIdLienDictMotReferent2")
	public Set getLexiquesForIdLienDictMotReferent2() {
		return this.lexiquesForIdLienDictMotReferent2;
	}

	public void setLexiquesForIdLienDictMotReferent2(
			Set lexiquesForIdLienDictMotReferent2) {
		this.lexiquesForIdLienDictMotReferent2 = lexiquesForIdLienDictMotReferent2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDictByIdLienDictMotReferent1")
	public Set getLexiquesForIdLienDictMotReferent1() {
		return this.lexiquesForIdLienDictMotReferent1;
	}

	public void setLexiquesForIdLienDictMotReferent1(
			Set lexiquesForIdLienDictMotReferent1) {
		this.lexiquesForIdLienDictMotReferent1 = lexiquesForIdLienDictMotReferent1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "liensDictByIdLienDictMotEtudie")
	public Set getLexiquesForIdLienDictMotEtudie() {
		return this.lexiquesForIdLienDictMotEtudie;
	}

	public void setLexiquesForIdLienDictMotEtudie(
			Set lexiquesForIdLienDictMotEtudie) {
		this.lexiquesForIdLienDictMotEtudie = lexiquesForIdLienDictMotEtudie;
	}

}
