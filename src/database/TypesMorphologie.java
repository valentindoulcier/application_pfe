package database;

// Generated 1 avr. 2013 22:44:41 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TypesMorphologie generated by hbm2java
 */
@Entity
@Table(name = "types_morphologie", catalog = "bddictionnairique")
public class TypesMorphologie implements java.io.Serializable {

	private static final long serialVersionUID = 1496609387956741841L;

	private Integer idTypeMorph;
	private String typeMorph;
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph1 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph2 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph3 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph4 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph5 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph6 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph7 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph8 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph9 = new HashSet<DecompositionMorphologique>(0);
	private Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph10 = new HashSet<DecompositionMorphologique>(0);

	public TypesMorphologie() {}

	public TypesMorphologie(
			String typeMorph,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph1,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph2,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph3,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph4,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph5,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph6,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph7,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph8,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph9,
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph10) {
		this.typeMorph = typeMorph;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph1 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph1;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph2 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph2;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph3 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph3;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph4 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph4;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph5 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph5;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph6 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph6;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph7 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph7;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph8 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph8;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph9 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph9;
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph10 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph10;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_type_morph", unique = true, nullable = false)
	public Integer getIdTypeMorph() {
		return this.idTypeMorph;
	}

	public void setIdTypeMorph(Integer idTypeMorph) {
		this.idTypeMorph = idTypeMorph;
	}

	@Column(name = "type_morph", length = 50)
	public String getTypeMorph() {
		return this.typeMorph;
	}

	public void setTypeMorph(String typeMorph) {
		this.typeMorph = typeMorph;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph3")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph3() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph3;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph3(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph3) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph3 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph2")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph2() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph2;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph2(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph2) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph2 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph1")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph1() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph1;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph1(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph1) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph1 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph1;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph7")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph7() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph7;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph7(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph7) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph7 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph7;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph10")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph10() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph10;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph10(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph10) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph10 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph10;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph8")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph8() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph8;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph8(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph8) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph8 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph8;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph6")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph6() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph6;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph6(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph6) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph6 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph6;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph9")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph9() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph9;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph9(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph9) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph9 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph9;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph5")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph5() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph5;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph5(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph5) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph5 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph5;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByTypesMorphologieIdTypeMorph4")
	public Set<DecompositionMorphologique> getDecompositionMorphologiquesForTypesMorphologieIdTypeMorph4() {
		return this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph4;
	}

	public void setDecompositionMorphologiquesForTypesMorphologieIdTypeMorph4(
			Set<DecompositionMorphologique> decompositionMorphologiquesForTypesMorphologieIdTypeMorph4) {
		this.decompositionMorphologiquesForTypesMorphologieIdTypeMorph4 = decompositionMorphologiquesForTypesMorphologieIdTypeMorph4;
	}

}
