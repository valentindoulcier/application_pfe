package database;

// Generated 25 janv. 2013 00:04:50 by Hibernate Tools 3.4.0.CR1

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * TypesMorphologie generated by hbm2java
 */
@Entity
@Table(name = "types_morphologie", catalog = "bddictionnairique")
public class TypesMorphologie implements java.io.Serializable {

	private static final long serialVersionUID = 8792704918655934233L;

	private Integer idTypeMorph;
	private String typeMorph;
	private Set labellisationMorphologiquesForM1 = new HashSet(0);
	private Set labellisationMorphologiquesForM2 = new HashSet(0);
	private Set labellisationMorphologiquesForM3 = new HashSet(0);
	private Set labellisationMorphologiquesForM4 = new HashSet(0);
	private Set labellisationMorphologiquesForM5 = new HashSet(0);
	private Set labellisationMorphologiquesForM6 = new HashSet(0);
	private Set labellisationMorphologiquesForM7 = new HashSet(0);
	private Set labellisationMorphologiquesForM8 = new HashSet(0);
	private Set labellisationMorphologiquesForM9 = new HashSet(0);
	private Set labellisationMorphologiquesForM10 = new HashSet(0);

	public TypesMorphologie() {
	}

	public TypesMorphologie(String typeMorph,
			Set labellisationMorphologiquesForM6,
			Set labellisationMorphologiquesForM10,
			Set labellisationMorphologiquesForM5,
			Set labellisationMorphologiquesForM4,
			Set labellisationMorphologiquesForM3,
			Set labellisationMorphologiquesForM9,
			Set labellisationMorphologiquesForM8,
			Set labellisationMorphologiquesForM7,
			Set labellisationMorphologiquesForM2,
			Set labellisationMorphologiquesForM1) {
		this.typeMorph = typeMorph;
		this.labellisationMorphologiquesForM6 = labellisationMorphologiquesForM6;
		this.labellisationMorphologiquesForM10 = labellisationMorphologiquesForM10;
		this.labellisationMorphologiquesForM5 = labellisationMorphologiquesForM5;
		this.labellisationMorphologiquesForM4 = labellisationMorphologiquesForM4;
		this.labellisationMorphologiquesForM3 = labellisationMorphologiquesForM3;
		this.labellisationMorphologiquesForM9 = labellisationMorphologiquesForM9;
		this.labellisationMorphologiquesForM8 = labellisationMorphologiquesForM8;
		this.labellisationMorphologiquesForM7 = labellisationMorphologiquesForM7;
		this.labellisationMorphologiquesForM2 = labellisationMorphologiquesForM2;
		this.labellisationMorphologiquesForM1 = labellisationMorphologiquesForM1;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_type_morph", unique = true, nullable = false)
	public Integer getIdTypeMorph() {
		return this.idTypeMorph;
	}

	public void setIdTypeMorph(Integer idTypeMorph) {
		this.idTypeMorph = idTypeMorph;
	}

	@Column(name = "type_morph", length = 50)
	public String getTypeMorph() {
		return this.typeMorph;
	}

	public void setTypeMorph(String typeMorph) {
		this.typeMorph = typeMorph;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM6")
	public Set getLabellisationMorphologiquesForM6() {
		return this.labellisationMorphologiquesForM6;
	}

	public void setLabellisationMorphologiquesForM6(
			Set labellisationMorphologiquesForM6) {
		this.labellisationMorphologiquesForM6 = labellisationMorphologiquesForM6;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM10")
	public Set getLabellisationMorphologiquesForM10() {
		return this.labellisationMorphologiquesForM10;
	}

	public void setLabellisationMorphologiquesForM10(
			Set labellisationMorphologiquesForM10) {
		this.labellisationMorphologiquesForM10 = labellisationMorphologiquesForM10;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM5")
	public Set getLabellisationMorphologiquesForM5() {
		return this.labellisationMorphologiquesForM5;
	}

	public void setLabellisationMorphologiquesForM5(
			Set labellisationMorphologiquesForM5) {
		this.labellisationMorphologiquesForM5 = labellisationMorphologiquesForM5;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM4")
	public Set getLabellisationMorphologiquesForM4() {
		return this.labellisationMorphologiquesForM4;
	}

	public void setLabellisationMorphologiquesForM4(
			Set labellisationMorphologiquesForM4) {
		this.labellisationMorphologiquesForM4 = labellisationMorphologiquesForM4;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM3")
	public Set getLabellisationMorphologiquesForM3() {
		return this.labellisationMorphologiquesForM3;
	}

	public void setLabellisationMorphologiquesForM3(
			Set labellisationMorphologiquesForM3) {
		this.labellisationMorphologiquesForM3 = labellisationMorphologiquesForM3;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM9")
	public Set getLabellisationMorphologiquesForM9() {
		return this.labellisationMorphologiquesForM9;
	}

	public void setLabellisationMorphologiquesForM9(
			Set labellisationMorphologiquesForM9) {
		this.labellisationMorphologiquesForM9 = labellisationMorphologiquesForM9;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM8")
	public Set getLabellisationMorphologiquesForM8() {
		return this.labellisationMorphologiquesForM8;
	}

	public void setLabellisationMorphologiquesForM8(
			Set labellisationMorphologiquesForM8) {
		this.labellisationMorphologiquesForM8 = labellisationMorphologiquesForM8;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM7")
	public Set getLabellisationMorphologiquesForM7() {
		return this.labellisationMorphologiquesForM7;
	}

	public void setLabellisationMorphologiquesForM7(
			Set labellisationMorphologiquesForM7) {
		this.labellisationMorphologiquesForM7 = labellisationMorphologiquesForM7;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM2")
	public Set getLabellisationMorphologiquesForM2() {
		return this.labellisationMorphologiquesForM2;
	}

	public void setLabellisationMorphologiquesForM2(
			Set labellisationMorphologiquesForM2) {
		this.labellisationMorphologiquesForM2 = labellisationMorphologiquesForM2;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "typesMorphologieByM1")
	public Set getLabellisationMorphologiquesForM1() {
		return this.labellisationMorphologiquesForM1;
	}

	public void setLabellisationMorphologiquesForM1(
			Set labellisationMorphologiquesForM1) {
		this.labellisationMorphologiquesForM1 = labellisationMorphologiquesForM1;
	}

}
