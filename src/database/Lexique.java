package database;

// Generated 29 mars 2013 17:34:42 by Hibernate Tools 3.4.0.CR1

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * Lexique generated by hbm2java
 */
@Entity
@Table(name = "lexique", catalog = "bddictionnairique")
public class Lexique implements java.io.Serializable {

	private static final long serialVersionUID = 4744203398737571215L;

	private Integer idLienLex;
	private Headword headwordByHeadwordIdMotEtudie;
	private Headword headwordByHeadwordIdMotReferent2;
	private TypesConstruction typesConstruction;
	private Headword headwordByHeadwordIdMotReferent1;
	private ListeTypesLexicaux listeTypesLexicaux;
	private ListeStatuts listeStatuts;
	private String note;

	public Lexique() {
	}

	public Lexique(Headword headwordByHeadwordIdMotEtudie,
			Headword headwordByHeadwordIdMotReferent2,
			TypesConstruction typesConstruction,
			Headword headwordByHeadwordIdMotReferent1,
			ListeTypesLexicaux listeTypesLexicaux, ListeStatuts listeStatuts) {
		this.headwordByHeadwordIdMotEtudie = headwordByHeadwordIdMotEtudie;
		this.headwordByHeadwordIdMotReferent2 = headwordByHeadwordIdMotReferent2;
		this.typesConstruction = typesConstruction;
		this.headwordByHeadwordIdMotReferent1 = headwordByHeadwordIdMotReferent1;
		this.listeTypesLexicaux = listeTypesLexicaux;
		this.listeStatuts = listeStatuts;
	}

	public Lexique(Headword headwordByHeadwordIdMotEtudie,
			Headword headwordByHeadwordIdMotReferent2,
			TypesConstruction typesConstruction,
			Headword headwordByHeadwordIdMotReferent1,
			ListeTypesLexicaux listeTypesLexicaux, ListeStatuts listeStatuts,
			String note) {
		this.headwordByHeadwordIdMotEtudie = headwordByHeadwordIdMotEtudie;
		this.headwordByHeadwordIdMotReferent2 = headwordByHeadwordIdMotReferent2;
		this.typesConstruction = typesConstruction;
		this.headwordByHeadwordIdMotReferent1 = headwordByHeadwordIdMotReferent1;
		this.listeTypesLexicaux = listeTypesLexicaux;
		this.listeStatuts = listeStatuts;
		this.note = note;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id_lien_lex", unique = true, nullable = false)
	public Integer getIdLienLex() {
		return this.idLienLex;
	}

	public void setIdLienLex(Integer idLienLex) {
		this.idLienLex = idLienLex;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "headword_id_mot_etudie", nullable = false)
	public Headword getHeadwordByHeadwordIdMotEtudie() {
		return this.headwordByHeadwordIdMotEtudie;
	}

	public void setHeadwordByHeadwordIdMotEtudie(
			Headword headwordByHeadwordIdMotEtudie) {
		this.headwordByHeadwordIdMotEtudie = headwordByHeadwordIdMotEtudie;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "headword_id_mot_referent_2", nullable = false)
	public Headword getHeadwordByHeadwordIdMotReferent2() {
		return this.headwordByHeadwordIdMotReferent2;
	}

	public void setHeadwordByHeadwordIdMotReferent2(
			Headword headwordByHeadwordIdMotReferent2) {
		this.headwordByHeadwordIdMotReferent2 = headwordByHeadwordIdMotReferent2;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_construction", nullable = false)
	public TypesConstruction getTypesConstruction() {
		return this.typesConstruction;
	}

	public void setTypesConstruction(TypesConstruction typesConstruction) {
		this.typesConstruction = typesConstruction;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "headword_id_mot_referent_1", nullable = false)
	public Headword getHeadwordByHeadwordIdMotReferent1() {
		return this.headwordByHeadwordIdMotReferent1;
	}

	public void setHeadwordByHeadwordIdMotReferent1(
			Headword headwordByHeadwordIdMotReferent1) {
		this.headwordByHeadwordIdMotReferent1 = headwordByHeadwordIdMotReferent1;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_type_lexical", nullable = false)
	public ListeTypesLexicaux getListeTypesLexicaux() {
		return this.listeTypesLexicaux;
	}

	public void setListeTypesLexicaux(ListeTypesLexicaux listeTypesLexicaux) {
		this.listeTypesLexicaux = listeTypesLexicaux;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_statut", nullable = false)
	public ListeStatuts getListeStatuts() {
		return this.listeStatuts;
	}

	public void setListeStatuts(ListeStatuts listeStatuts) {
		this.listeStatuts = listeStatuts;
	}

	@Column(name = "note", length = 65535)
	public String getNote() {
		return this.note;
	}

	public void setNote(String note) {
		this.note = note;
	}

}
